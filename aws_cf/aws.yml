AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to create resources for Kaleidoscope AWS Blueprint'

Parameters:
  CreateAccountLevelCloudTrail:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
    Description: >
      Choose 'true' only if you do not have CloudTrail enabled at the organization level. 
      Creating an account-level CloudTrail will incur additional AWS costs. Most organizations 
      already have CloudTrail configured centrally.
    
Conditions:
  CreateCloudTrail: !Equals [!Ref CreateAccountLevelCloudTrail, 'true']

Resources:
  # IAM User with Read-Only Access for Data Crawl
  IAMUser:
    Type: AWS::IAM::User
    Properties:
      UserName: 'kscope-crawl-user'
      Path: "/"
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/ReadOnlyAccess'

  IAMAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref IAMUser

  # SQS Queue for Event Collection
  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: 'kscope-trail-queue'
      MessageRetentionPeriod: 345600  # 4 days
      VisibilityTimeout: 30
      DelaySeconds: 0
      MaximumMessageSize: 262144
      ReceiveMessageWaitTimeSeconds: 0
      SqsManagedSseEnabled: true

  SQSQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: OwnerStatement
            Effect: Allow
            Principal:
              AWS: !Sub '${AWS::AccountId}'
            Action: 'SQS:*'
            Resource: !GetAtt SQSQueue.Arn
          - Sid: AllowCrawlUser
            Effect: Allow
            Principal:
              AWS: !GetAtt IAMUser.Arn
            Action: 'SQS:*'
            Resource: !GetAtt SQSQueue.Arn
          - Sid: AllowEventBridgeRule
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: 'SQS:SendMessage'
            Resource: !GetAtt SQSQueue.Arn
            Condition:
              ArnEquals:
                'aws:SourceArn': !GetAtt EventBridgeRule.Arn

  # EventBridge Rule to Capture CloudTrail Events
  EventBridgeRule:
    Type: AWS::Events::Rule
    Properties:
      Name: 'kscope-event-rule'
      Description: 'Filters events from CloudTrail to an SQS Queue'
      EventPattern: '{"detail-type":["AWS API Call via CloudTrail"]}'
      State: ENABLED
      Targets:
        - Id: SQSTarget
          Arn: !GetAtt SQSQueue.Arn

  # Conditional Resources - Created only when CreateAccountLevelCloudTrail is true
  S3Bucket:
    Type: AWS::S3::Bucket
    Condition: CreateCloudTrail
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub 'kscope-trail-bucket-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: CreateCloudTrail
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 's3:GetBucketAcl'
            Resource: !GetAtt S3Bucket.Arn
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: 's3:PutObject'
            Resource: !Sub '${S3Bucket.Arn}/AWSLogs/${AWS::AccountId}/*'
            Condition:
              StringEquals:
                's3:x-amz-acl': 'bucket-owner-full-control'

  CloudTrail:
    Type: AWS::CloudTrail::Trail
    Condition: CreateCloudTrail
    DependsOn:
      - S3BucketPolicy
    Properties:
      TrailName: 'kscope-trail'
      S3BucketName: !Ref S3Bucket
      IncludeGlobalServiceEvents: true
      IsMultiRegionTrail: true
      EnableLogFileValidation: true
      IsLogging: true
      EventSelectors:
        # Management events
        - ReadWriteType: All
          IncludeManagementEvents: true
        # S3 data events
        - ReadWriteType: All
          IncludeManagementEvents: false
          DataResources:
            - Type: AWS::S3::Object
              Values:
                - 'arn:aws:s3'
        # Lambda data events
        - ReadWriteType: All
          IncludeManagementEvents: false
          DataResources:
            - Type: AWS::Lambda::Function
              Values:
                - 'arn:aws:lambda'
        # DynamoDB data events
        - ReadWriteType: All
          IncludeManagementEvents: false
          DataResources:
            - Type: AWS::DynamoDB::Table
              Values:
                - 'arn:aws:dynamodb'

  # Store credentials securely in Secrets Manager
  AccessKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: '/kscope/crawler/access-key'
      Description: 'Access key for Kaleidoscope crawler'
      SecretString: !Ref IAMAccessKey

  SecretKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: '/kscope/crawler/secret-key'
      Description: 'Secret key for Kaleidoscope crawler'
      SecretString: !GetAtt IAMAccessKey.SecretAccessKey

Outputs:
  AccessKeySecretName:
    Description: "Secrets Manager secret containing the access key for Kaleidoscope data crawl"
    Value: '/kscope/crawler/access-key'
  
  SecretKeySecretName:
    Description: "Secrets Manager secret containing the secret key for Kaleidoscope data crawl"
    Value: '/kscope/crawler/secret-key'
  
  SQSURL:
    Description: SQS URL to be used for Kaleidoscope event crawl
    Value: !Ref SQSQueue
